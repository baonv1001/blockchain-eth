const addresses = require('../../../deployed-address.json');
const { ethers } = require("ethers");
const fs = require("fs");
const abi = JSON.parse(fs.readFileSync("./artifacts/contracts/MyTokenA.sol/MyTokenA.json")).abi;
require("dotenv").config();

const provider = new ethers.JsonRpcProvider("http://127.0.0.1:8545");
const spenderWallet = new ethers.Wallet(process.env.SPENDER_PRIVATE_KEY, provider);

const tokenAddress = addresses.MyTokenA; // Token A
const token = new ethers.Contract(tokenAddress, abi, spenderWallet);

// ƒê·ªãa ch·ªâ t·ª´ ng∆∞·ªùi s·ªü h·ªØu (ng∆∞·ªùi approve), ƒë·∫øn ng∆∞·ªùi nh·∫≠n
// üßæ Owner (c√≥ token)
const owner = "0x04fbeC3Ac166Fea2ce157f74962eFe4C8aFf7891"; // ng∆∞·ªùi approve
const receiver = "0x90421361aAeb310843A30d6e6b841a69335CDA4C"; // ng∆∞·ªùi nh·∫≠n m·ªõi

async function main() {
  const amount = ethers.parseUnits("20", 18);

  // transferFrom(from, to, amount): Cho ph√©p m·ªôt ƒë·ªãa ch·ªâ kh√°c chuy·ªÉn token thay m·∫∑t ng∆∞·ªùi kh√°c, ch·ªâ khi ƒë√£ ƒë∆∞·ª£c approve tr∆∞·ªõc ƒë√≥.
  const tx = await token.transferFrom(owner, receiver, amount);
  console.log("transferFrom Tx:", tx.hash);
  await tx.wait();
  console.log("Chuy·ªÉn token b·∫±ng quy·ªÅn th√†nh c√¥ng!");
}

main().catch(console.error);
